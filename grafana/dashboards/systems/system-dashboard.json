{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 11,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 10,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "options": {
        "afterRender": "",
        "content": "<div class=\"card\">\n  <div class=\"card-content\">\n    <h2 class=\"card-title\"><b>{{name}}</b></h2>\n    <p class=\"card-text\"><b>ID #:</b> {{id}}</p>\n    <p class=\"card-text\"><b>Location:</b> {{country_code}}, {{adm1}}, {{adm2}}, {{adm3}}, {{adm4}}</p>\n  </div>\n</div>",
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "height": 207,
          "language": "html"
        },
        "editors": [
          "styles"
        ],
        "externalScripts": [],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": ".card {\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  margin: 20px;\n}\n\n.card img {\n  width: 100%;\n  height: auto;\n}\n\n.card-content {\n  padding: 20px;\n}\n\n.card-title {\n  font-size: 20px;\n  margin-bottom: 10px;\n}\n\n.card-text {\n  color: #555;\n  font-size: 16px;\n}",
        "wrap": true
      },
      "pluginVersion": "4.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select id, name, to_char(version, 'YYYY-MM-DD') as date, country_code, adm1, adm2, adm3, adm4\nfrom systems \nWHERE id = '${id}'",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "wsi"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "A": {
                        "color": "semi-dark-green",
                        "index": 0
                      },
                      "B": {
                        "color": "super-light-yellow",
                        "index": 1
                      },
                      "C": {
                        "color": "orange",
                        "index": 2
                      },
                      "D": {
                        "color": "semi-dark-red",
                        "index": 3
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 10,
        "y": 0
      },
      "id": 6,
      "options": {
        "colorMode": "background_solid",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^wsi$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value",
        "wideLayout": true
      },
      "pluginVersion": "10.3.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT wsi\nfrom systems\nwhere id = '${id}'",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "gridPos": {
        "h": 16,
        "w": 11,
        "x": 13,
        "y": 0
      },
      "id": 4,
      "options": {
        "alt_field": "",
        "height": "75",
        "icon_field": "",
        "open_url": {
          "base_url": "",
          "enable": false,
          "metric_field": "",
          "open_in_tab": true,
          "suffix": ""
        },
        "overlay": {
          "bindings": {
            "bindings": [],
            "has_text": true,
            "unbounded": "#66666620"
          },
          "field": "",
          "height": {
            "size": 5,
            "unit": "%"
          },
          "position": "Top right",
          "width": {
            "size": 5,
            "unit": "%"
          }
        },
        "shared_cross_hair": {
          "backgroundColor": "#FFFFFF10",
          "borderColor": "#FFFFFF20"
        },
        "singleFill": true,
        "slideshow": {
          "duration": 5000,
          "enable": false,
          "infinite": true,
          "pauseOnHover": true,
          "transition": "Slide",
          "transition_duration": 1000
        },
        "tooltip": false,
        "tooltip_date_elapsed": false,
        "tooltip_field": "",
        "tooltip_include_date": false,
        "tooltip_include_field": true,
        "underline": {
          "bindings": {
            "bindings": [],
            "has_text": true,
            "unbounded": "#CCCCDCFF"
          },
          "bindings_field": "",
          "field": "",
          "text_align": "left",
          "text_size": "14"
        },
        "width": "75"
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  image_url\nFROM systems\nWHERE id = '${id}'\nORDER BY 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "dalvany-image-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unitScale": true
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 13,
        "x": 0,
        "y": 7
      },
      "id": 5,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "osm-standard"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showMeasure": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "border": 1,
              "color": "rgb(200, 200, 200)",
              "crop": true,
              "kind": "square",
              "radius": 30,
              "shadow": true,
              "src": "image_url"
            },
            "filterData": {
              "id": "byRefId",
              "options": "A"
            },
            "location": {
              "latitude": "latitude",
              "longitude": "longitude",
              "mode": "coords"
            },
            "name": "Community",
            "tooltip": true,
            "type": "photos"
          }
        ],
        "tooltip": {
          "mode": "none"
        },
        "view": {
          "allLayers": true,
          "id": "fit",
          "lastOnly": false,
          "lat": 0,
          "layer": "Community",
          "lon": 0,
          "zoom": 10
        }
      },
      "pluginVersion": "10.3.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT latitude, longitude, wsi, image_url\nFROM systems\nWHERE id = '${id}'\nORDER BY 1\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "description": "",
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 7,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto",
          "height": 600
        },
        "editorMode": "visual",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "const series = data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  \n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n/**\n * Enable Data Zoom by default\n */\nsetTimeout(() => echartsInstance.dispatchAction({\n  type: 'takeGlobalCursor',\n  key: 'dataZoomSelect',\n  dataZoomSelectActive: true,\n}), 500);\n\n/**\n * Update Time Range on Zoom\n */\nechartsInstance.on('datazoom', function (params) {\n  const startValue = params.batch[0]?.startValue;\n  const endValue = params.batch[0]?.endValue;\n  locationService.partial({ from: startValue, to: endValue });\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: data.series.map((s) => s.refId),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n};",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "height": 400,
          "name": "default"
        },
        "visualEditor": {
          "code": "\nconst data = context.panel.data;\nconst names = data.series[0].fields.flatMap((fields) => {\n  if (fields.name == 'served_households') return [];\n  return fields.values.map(value => ({ name: value }));\n}).filter((value, index, self) => {\n  return self.findIndex(obj => obj.name === value.name) === index;\n});\n\nconst communityNames = data.series[0].fields.find(field => field.name === 'community_name').values;\nconst systemNames = data.series[0].fields.find(field => field.name === 'system_name').values;\nconst providerNames = data.series[0].fields.find(field => field.name === 'provider_name').values;\nconst servedHouseholds = data.series[0].fields.find(field => field.name === 'served_households').values;\n\nconst links = [];\n\nfor (let i = 0; i < communityNames.length; i++) {\n  links.push({\n    source: communityNames[i],\n    target: systemNames[i],\n    value: servedHouseholds[i]\n  });\n}\n\nfor (let i = 0; i < systemNames.length; i++) {\n  links.push({\n    source: systemNames[i],\n    target: providerNames[i],\n    value: 5\n  });\n}\n\nreturn {\n  series: {\n    type: 'sankey',\n    layout: 'none',\n    emphasis: {\n      focus: 'adjacency'\n    },\n    data: names,\n    links: links,\n  }\n};",
          "codeHeight": 669,
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "5.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  c.name as community_name,\n  s.name as system_name,\n  p.name as provider_name,\n  csp.served_households\nFROM communities_systems_providers csp\nJOIN systems s on s.id = csp.system_id\nJOIN communities c on c.id = csp.community_id\nJOIN providers p on p.id = csp.provider_id\nWHERE s.id = '${id}';",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Relationships",
      "transformations": [],
      "type": "volkovlabs-echarts-panel"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "hide": 2,
        "name": "id",
        "query": "",
        "skipUrlSync": false,
        "type": "constant"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "hidden": true
  },
  "timezone": "",
  "title": "System Dashboard",
  "uid": "aa085765-841a-4e8f-86c3-0c9d87f1e8b6",
  "version": 5,
  "weekStart": ""
}