{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 13,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "score"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "A": {
                        "color": "green",
                        "index": 0
                      },
                      "B": {
                        "color": "super-light-yellow",
                        "index": 1
                      },
                      "C": {
                        "color": "orange",
                        "index": 2
                      },
                      "D": {
                        "color": "dark-red",
                        "index": 3
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Name"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "country"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Country"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "adm"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Adm"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "latitude"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Latitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "longitude"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Longitude"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "score"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Score"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "basemap": {
          "config": {},
          "type": "default"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showLayercontrol": true,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "cluster": false,
              "clusterDistance": 20,
              "clusterMinDistance": 0,
              "clusterValue": "size",
              "color": {
                "field": "score",
                "fixed": "dark-green"
              },
              "enableGradient": false,
              "enableShadow": false,
              "fillOpacity": 1,
              "iconSize": 9,
              "pinShape": "marker",
              "shape": "circle",
              "showLegend": false,
              "showPin": false,
              "size": {
                "fixed": 3,
                "max": 15,
                "min": 2
              }
            },
            "location": {
              "geohash": "geom",
              "latitude": "latitude",
              "longitude": "longitude",
              "mode": "coords"
            },
            "name": "Communities",
            "query": "A",
            "type": "markers"
          }
        ],
        "view": {
          "id": "zero",
          "lat": 0,
          "lon": 0,
          "zoom": 2.5
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT name,\n  upper(country) as country,\n  concat(adm1, ', ',adm2, ', ',adm3, ', ',adm4) as adm,\n  latitude,\n  longitude,\n  score\nFROM systems \nWHERE upper(country) in ($country);",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [
                  {
                    "name": "latitude",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "longitude",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "score",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "communities"
        }
      ],
      "type": "orchestracities-map-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "shades"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "population"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Population"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "households"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Households"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "served_households"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Served households"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "households_without_water"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Households without water"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 7,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "allValues"
          ],
          "fields": "/.*/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "10.3.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  replace(to_char(sum(population), 'fm999,999,999,999'), ',','.') as population,\n  replace(to_char(sum(households), 'fm999,999,999,999'), ',','.') as households,\n  replace(to_char(sum(households) - sum(households_without_water), 'fm999,999,999,999'), ',','.') as served_households,\n  replace(to_char(sum(households_without_water), 'fm999,999,999,999'), ',','.') as households_without_water\nFROM systems s\nJOIN communities_systems_providers csp ON s.id = csp.system_id\nJOIN communities c ON c.id = csp.community_id\nWHERE upper(s.country) in ($country);",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "score"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "A": {
                        "color": "semi-dark-green",
                        "index": 0
                      },
                      "B": {
                        "color": "super-light-yellow",
                        "index": 1
                      },
                      "C": {
                        "color": "orange",
                        "index": 2
                      },
                      "D": {
                        "color": "semi-dark-red",
                        "index": 3
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "count"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Systems"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 17
      },
      "id": 2,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "colorByField": "score",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "never",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "score",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT COUNT(score), score\nFROM systems \nWHERE upper(country) in ($country)\nGROUP BY score\nORDER BY score ASC LIMIT 50 ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "name": "COUNT",
                "parameters": [
                  {
                    "name": "score",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "parameters": [
                  {
                    "name": "score",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "score",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50,
            "orderBy": {
              "property": {
                "name": [
                  "score"
                ],
                "type": "string"
              },
              "type": "property"
            },
            "orderByDirection": "ASC"
          },
          "table": "communities"
        }
      ],
      "title": "Systems by Score",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 17
      },
      "id": 6,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto"
        },
        "editorMode": "code",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "const getData = () => {\n  const nameValues = data.series[0].fields[0].values;\n  const valueValues = data.series[0].fields[1].values;\n\n  const combinedData = nameValues.map((name, index) => ({\n    name,\n    value: valueValues[index]\n  }));\n\n  combinedData.sort((a, b) => a.value - b.value);\n\n  return combinedData;\n};\n\nconst getCountries = () => {\n  return JSON.parse(data.series[1].fields[0].values);\n}\n\n(async () => {\n  try {\n    const countriesJson = getCountries();\n    const gdata = await getData();\n\n    let myChart = context.panel.chart;\n    echarts.registerMap('COUNTRIES', countriesJson);\n\n    const mapOption = {\n      visualMap: {\n        left: 'right',\n        min: 500000,\n        max: 38000000,\n        inRange: {\n          // prettier-ignore\n          color: ['#313695']\n        },\n        calculable: false\n      },\n      series: [\n        {\n          id: 'population',\n          type: 'map',\n          roam: true,\n          map: 'COUNTRIES',\n          animationDurationUpdate: 1000,\n          universalTransition: true,\n          data: gdata\n        }\n      ]\n    };\n    const barOption = {\n      xAxis: {\n        type: 'value'\n      },\n      yAxis: {\n        type: 'category',\n        axisLabel: {\n          rotate: 30\n        },\n        data: gdata.map(function (item) {\n\n          return item.name;\n        })\n      },\n      animationDurationUpdate: 1000,\n      series: {\n        type: 'bar',\n        id: 'population',\n        data: gdata.map(function (item) {\n          return item.value;\n        }),\n        universalTransition: true\n      }\n    };\n\n    let currentOption = mapOption;\n    setInterval(function () {\n      currentOption = currentOption === mapOption ? barOption : mapOption;\n      myChart.setOption(currentOption, true);\n    }, 4000);\n\n    return {\n      visualMap: {\n        left: 'right',\n        min: 500000,\n        max: 38000000,\n        inRange: {\n          // prettier-ignore\n          color: ['#313695']\n        },\n        calculable: false\n      },\n      series: [\n        {\n          id: 'population',\n          type: 'map',\n          roam: true,\n          map: 'COUNTRIES',\n          animationDurationUpdate: 1000,\n          universalTransition: true,\n          data: gdata\n        }\n      ]\n    }\n\n  } catch (error) {\n    console.error('Error en la obtención de datos:', error);\n  }\n})();\n\n",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "name": "default"
        },
        "visualEditor": {
          "code": "console.log(context);\nreturn {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "5.3.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT country as name, count(*) as value\nFROM systems\nGROUP BY country\nORDER BY 2;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT json_build_object(\n    'type', 'FeatureCollection',\n    'features', json_agg(ST_AsGeoJSON(t.*)::json)\n    ) as geojson\nFROM (SELECT code, name, geom FROM countries\n     ) as t(id, name, geom);",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Systems by Country",
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "description": "<a href=\"/d/f1ba09d3-fe76-47dd-abe6-718fe97074a2/systems-list?orgId=1\" target=\"_blank\">Show all</a>",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ID"
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Name"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "version"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Version"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "country_code"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Country"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/aa085765-841a-4e8f-86c3-0c9d87f1e8b6/system-dashboard?orgId=1&var-id=${__data.fields.id}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 25
      },
      "id": 4,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.3.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT id, name, version, country_code\nFROM systems \nWHERE upper(country) in ($country)\nORDER BY version DESC\nLIMIT 10",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Last records",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
      },
      "description": "<a href=\"/d/f1ba09d3-fe76-47dd-abe6-718fe97074a2/systems-list?orgId=1\" target=\"_blank\">Show all</a>",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unitScale": true
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "id"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "ID"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Name"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "/d/aa085765-841a-4e8f-86c3-0c9d87f1e8b6/system-dashboard?orgId=1&var-id=${__data.fields.id}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "wsi"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "WSI"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "country_code"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Country"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "score"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Score"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "A": {
                        "color": "semi-dark-green",
                        "index": 0
                      },
                      "B": {
                        "color": "super-light-yellow",
                        "index": 1
                      },
                      "C": {
                        "color": "orange",
                        "index": 2
                      },
                      "D": {
                        "color": "semi-dark-red",
                        "index": 3
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "id"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 25
      },
      "id": 5,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.3.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT id, name, score, wsi, country_code\nFROM systems \nWHERE upper(country) in ($country)\nORDER BY wsi DESC\nLIMIT 10",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Top records",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "0fdb8ba7-3686-48b7-8a92-373004563730"
        },
        "definition": "SELECT upper(country) from communities group by country order by country asc;",
        "hide": 0,
        "includeAll": true,
        "label": "Country",
        "multi": false,
        "name": "country",
        "options": [],
        "query": "SELECT upper(country) from communities group by country order by country asc;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "hidden": true
  },
  "timezone": "",
  "title": "Systems",
  "uid": "de0c2c76-364f-4326-a454-ec1af85569a2",
  "version": 3,
  "weekStart": ""
}