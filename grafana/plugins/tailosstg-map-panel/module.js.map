{"version":3,"file":"module.js","mappings":"4GAAAA,EAAOC,QAAUC,C,UCAjBF,EAAOC,QAAUE,C,UCAjBH,EAAOC,QAAUG,C,UCAjBJ,EAAOC,QAAUI,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaR,QAGrB,IAAID,EAASM,EAAyBE,GAAY,CAGjDP,QAAS,CAAC,GAOX,OAHAU,EAAoBH,GAAUR,EAAQA,EAAOC,QAASM,GAG/CP,EAAOC,OACf,CCrBAM,EAAoBK,EAAKZ,IACxB,IAAIa,EAASb,GAAUA,EAAOc,WAC7B,IAAOd,EAAiB,QACxB,IAAM,EAEP,OADAO,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACd,EAASgB,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAElB,EAASiB,IAC5EE,OAAOC,eAAepB,EAASiB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFlB,EAAoBsB,EAAK5B,IACH,oBAAX6B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAepB,EAAS6B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAepB,EAAS,aAAc,CAAE+B,OAAO,GAAO,E,mGCH9D,MCSaC,EAAqC,EAChDC,WAAUC,cAAaC,QAAOC,aAE9B,MAAMC,EAASC,KACRC,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,GASvD,OACE,oCACE,kBAACC,MAAAA,CACCC,IAAKV,GAAY,GACjBW,QAAS,KAEP,MADAJ,GAAmB,GACb,IAAIK,MAAM,0BAA0B,EAE5CC,OAAQ,IAAMN,GAAmB,GACjCO,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GAAG;uBACUd;wBACCC;iBAIjBG,GACC,kBAACxB,IAAAA,CACCmC,OAAO,SACPC,IAAI,sBACJC,KAAMnB,EACNoB,UAAAA,EACAN,UAAWV,EAAOiB,eAClBC,QAAUC,GA9BG,MACnB,MAAMC,EAAOC,SAASC,cAAc,KACpCF,EAAKL,KAAOlB,EACZuB,EAAKJ,SAAWnB,EAAY0B,OAAO1B,EAAY2B,YAAY,KAAO,GAClEJ,EAAKK,OAAO,EA0BUC,IAEhB,kBAACC,IAAAA,CAAEjB,UAAU,oB,EAOjBT,GAAY2B,EAAAA,EAAAA,gBAAc,KAAO,CACrCX,eAAgBL,EAAAA,GAAG;;;;;;;;;;;;UC5CRiB,EAAqC,EAChDC,WAAUlC,WAAUC,cAAaC,QAAOC,aAExC,MAAMC,EAASC,IASf,OACE,oCACE,kBAAC8B,QAAAA,CACCzB,IAAKwB,EACLE,UAAU,EACVlC,MAAOA,EACPC,OAAQA,EACRkC,OAAQrC,EACRsC,MAAM,EACNC,OAAO,EACPC,QAAQ,OACR7B,QAAUY,GAAMkB,QAAQC,IAAI,sBAAuBnB,GACnDT,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GAAG;uBACUd;wBACCC;iBAIV,kBAACrB,IAAAA,CACLmC,OAAO,SACPC,IAAI,sBACJC,KAAMnB,EACNoB,UAAAA,EACAN,UAAWV,EAAOiB,eAClBC,QAAUC,GAhCG,MACnB,MAAMC,EAAOC,SAASC,cAAc,KACpCF,EAAKL,KAAOlB,EACZuB,EAAKJ,SAAWnB,EAAY0B,OAAO1B,EAAY2B,YAAY,KAAO,GAClEJ,EAAKK,OAAO,EA4BUC,IAEhB,kBAACC,IAAAA,CAAEjB,UAAU,oB,EAMjBT,GAAY2B,EAAAA,EAAAA,gBAAc,KAAO,CACrCX,eAAgBL,EAAAA,GAAG;;;;;;;;;;;;UC5Cf2B,EAAeC,GAAgB,8BAA8BC,KAAKD,GAkDlEvC,GAAY2B,EAAAA,EAAAA,gBAAc,KAAO,CACrCc,MAAO9B,EAAAA,GAAG;;;;MAKV+B,QAAS/B,EAAAA,GAAG;;;UCnEDgC,EAAS,IAAIC,EAAAA,aDuCsB,EAC9CC,UAASC,OAAMjD,QAAOC,a,IAKPiD,EACEA,EAJjB,MAAMhD,EAASC,IAET+C,EAAaC,KAAKC,MAAMH,EAAKI,OAAO,GAAGC,OAAO,GAAGC,OAAOpE,IAAI,IAClE,IAAIW,EAA4B,QAAjBoD,EAAAA,EAAWM,cAAXN,IAAAA,OAAAA,EAAAA,EAAmBO,SAClC,MAAMzB,EAA4B,QAAjBkB,EAAAA,EAAWQ,cAAXR,IAAAA,OAAAA,EAAAA,EAAmBO,SAC9B1D,EAAcmD,EAAWS,WAAa3B,GAAYlC,GAEhDE,MAAO4D,EAAY3D,OAAQ4D,GHnDlB,EAACnB,EAAaoB,EAAoBC,EAAqBf,KACxE,MAAOhD,EAAOgE,IAAe1D,EAAAA,EAAAA,UAAS,IAC/BL,EAAQgE,IAAgB3D,EAAAA,EAAAA,UAAS,GAmCxC,OAjCA4D,EAAAA,EAAAA,YAAU,KACR,IAAIlE,EACAC,EACAkE,EACJ,MAAM5D,EAAM,IAAI6D,MAChB7D,EAAI8D,OAAS,KACXrE,EAAQO,EAAIP,MACZC,EAASM,EAAIN,OACb,IAAIqE,EAAgB,EAChBC,EAAiB,EACjBvE,GAASC,GACXkE,EAAcnE,EAAQC,EACtBqE,EAAgBR,EAChBS,EAAiBD,EAAgBH,EAC7BI,EAAiBR,IACnBQ,EAAiBR,EACjBO,EAAgBC,EAAiBJ,IAE1BlE,EAASD,IAClBmE,EAAclE,EAASD,EACvBuE,EAAiBR,EACjBO,EAAgBC,EAAiBJ,EAC7BG,EAAgBR,IAClBQ,EAAgBR,EAChBS,EAAiBD,EAAgBH,IAGrCH,EAAYM,GACZL,EAAaM,EAAe,EAE9BhE,EAAIC,IAAMkC,CAAG,GACZ,CAACoB,EAAYC,EAAarB,IAEtB,CACL1C,QACAC,SACD,EGWkDuE,CAAW1E,EAAUE,EAAOC,GAEzEwE,EAAQ,CAAEzC,WAAUlC,WAAUC,cAAa6D,aAAYC,eAC7D,OACE,kBAACa,MAAAA,CAAI9D,UAAWV,EAAO0C,OACrB,kBAAC8B,MAAAA,CAAI9D,UAAWV,EAAO2C,SAzCR,CAAC4B,IACpB,MAAM,SAAEzC,EAAQ,SAAElC,EAAQ,YAAEC,EAAW,WAAE6D,EAAU,YAAEC,GAAgBY,EACrE,MALmC,0CAA0C9B,KAK5D7C,IAAc2C,EAAYT,GAMvCS,EAAYT,GACP,kBAACD,EAAiBA,CACvBC,SAAUA,EACVlC,SAAUA,EACVC,YAAaA,EACbC,MAAO4D,EACP3D,OAAQ4D,IAIL,kBAAChE,EAAiBA,CACvBC,SAAUA,EACVC,YAAaA,EACbC,MAAO4D,EACP3D,OAAQ4D,IAnBD,oCAAE,mI,EAuCJc,CAAaF,IAAAA,G","sources":["webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./components/GetMaps.tsx","webpack:///./components/ImageDisplayPanel.tsx","webpack:///./components/VideoDisplayPanel.tsx","webpack:///./components/MapDisplayPanel.tsx","webpack:///./module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useEffect, useState } from 'react';\n\nconst useMapData = (url: string, panelWidth: number, panelHeight: number, options: object) => {\n  const [width, setImgWidth] = useState(0);\n  const [height, setImgHeight] = useState(0);\n\n  useEffect(() => {\n    let width;\n    let height;\n    let aspectRatio;\n    const img = new Image();\n    img.onload = () => {\n      width = img.width;\n      height = img.height;\n      let adjustedWidth = 0;\n      let adjustedHeight = 0;\n      if (width >= height) {\n        aspectRatio = width / height;\n        adjustedWidth = panelWidth;\n        adjustedHeight = adjustedWidth / aspectRatio;\n        if (adjustedHeight > panelHeight) {\n          adjustedHeight = panelHeight;\n          adjustedWidth = adjustedHeight * aspectRatio;\n        }\n      } else if (height > width) {\n        aspectRatio = height / width;\n        adjustedHeight = panelHeight;\n        adjustedWidth = adjustedHeight / aspectRatio;\n        if (adjustedWidth > panelWidth) {\n          adjustedWidth = panelWidth;\n          adjustedHeight = adjustedWidth * aspectRatio;\n        }\n      }\n      setImgWidth(adjustedWidth);\n      setImgHeight(adjustedHeight);\n    };\n    img.src = url;\n  }, [panelWidth, panelHeight, url]);\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default useMapData;\n","import { stylesFactory } from '@grafana/ui';\nimport { css, cx } from '@emotion/css';\nimport React, { useState } from 'react';\n\ninterface Props {\n  imageUrl: string;\n  downloadUrl: string;\n  width: number;\n  height: number;\n}\n\nexport const ImageDisplayPanel: React.FC<Props> = ({\n  imageUrl, downloadUrl, width, height,\n}) => {\n  const styles = getStyles();\n  const [displayDownload, setDisplayDownload] = useState(false);\n\n  const DownloadFile = () => {\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = downloadUrl.substr(downloadUrl.lastIndexOf('/') + 1);\n    link.click();\n  };\n\n  return (\n    <>\n      <img\n        src={imageUrl || ''}\n        onError={() => {\n          setDisplayDownload(false);\n          throw new Error('No map image available!');\n        }}\n        onLoad={() => setDisplayDownload(true)}\n        className={cx(\n          css`\n              width: ${width}px;\n              height: ${height}px;\n            `,\n        )}\n      />\n      {displayDownload && (\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={imageUrl}\n          download\n          className={styles.downloadButton}\n          onClick={(e) => DownloadFile()}\n        >\n          <i className=\"fa fa-download\" />\n        </a>\n      )}\n    </>\n  );\n};\n\nconst getStyles = stylesFactory(() => ({\n  downloadButton: css`\n    height: 2rem;\n    width: 2rem;\n    font-size: 1.5rem;\n\n    position: absolute;\n    left: 20px;\n    top: 20px;\n    text-shadow: 0 0 3px #000;\n\n    color: #ffffff;\n    text-align: center;\n    `,\n}));\n","import { stylesFactory } from '@grafana/ui';\nimport { css, cx } from '@emotion/css';\nimport React from 'react';\n\n\ninterface Props {\n  videoUrl: string;\n  imageUrl: string;\n  downloadUrl: string;\n  width: number;\n  height: number;\n}\n\nexport const VideoDisplayPanel: React.FC<Props> = ({\n  videoUrl, imageUrl, downloadUrl, width, height,\n}) => {\n  const styles = getStyles();\n\n  const DownloadFile = () => {\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = downloadUrl.substr(downloadUrl.lastIndexOf('/') + 1);\n    link.click();\n  };\n\n  return (\n    <>\n      <video \n        src={videoUrl} \n        controls={true}\n        width={width}\n        height={height}\n        poster={imageUrl}\n        loop={false}\n        muted={true}\n        preload='auto'\n        onError={(e) => console.log('Error playing video', e)}\n        className={cx(\n          css`\n              width: ${width}px;\n              height: ${height}px;\n            `,\n        )}\n      />\n              <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={imageUrl}\n          download\n          className={styles.downloadButton}\n          onClick={(e) => DownloadFile()}\n        >\n          <i className=\"fa fa-download\" />\n        </a>\n    </>\n  );\n};\n\nconst getStyles = stylesFactory(() => ({\n  downloadButton: css`\n      height: 2rem;\n      width: 2rem;\n      font-size: 1.5rem;\n\n      position: absolute;\n      left: 20px;\n      top: 20px;\n      text-shadow: 0 0 3px #000;\n\n      color: #ffffff;\n      text-align: center;\n    `,\n}));\n","import { css } from '@emotion/css';\n\nimport { PanelProps } from '@grafana/data';\nimport { stylesFactory } from '@grafana/ui';\nimport React from 'react';\nimport { SimpleOptions } from 'types';\n\nimport useMapData from './GetMaps';\nimport { ImageDisplayPanel } from './ImageDisplayPanel';\nimport { VideoDisplayPanel } from './VideoDisplayPanel';\n\n\ninterface Props extends PanelProps<SimpleOptions> { }\n\nconst isImageFile = (url: string) => /\\.(gif|jpe?g|tiff?|png|webp|bmp)(\\?|$)/i.test(url);\nconst isVideoFile = (url: string) => /\\.(mp4|webm|ogg|mkv)(\\?|$)/i.test(url);\n\nconst renderSwitch = (props: any) => {\n  const { videoUrl, imageUrl, downloadUrl, mediaWidth, mediaHeight } = props;\n  if (!isImageFile(imageUrl) && !isVideoFile(videoUrl)) {\n    return <>\n      ERROR: Data source must return a valid image or video URL, like `https://grafana.com/media/images/logos/grafana-logo-footer.svg`\n    </>;\n  }\n\n  if (isVideoFile(videoUrl)) {\n    return <VideoDisplayPanel\n      videoUrl={videoUrl}\n      imageUrl={imageUrl}\n      downloadUrl={downloadUrl}\n      width={mediaWidth}\n      height={mediaHeight}\n    />;\n  }\n\n  return <ImageDisplayPanel\n    imageUrl={imageUrl}\n    downloadUrl={downloadUrl}\n    width={mediaWidth}\n    height={mediaHeight}\n  />;\n}\n\nexport const MapDisplayPanel: React.FC<Props> = ({\n  options, data, width, height,\n}) => {\n  const styles = getStyles();\n\n  const parsedData = JSON.parse(data.series[0].fields[0].values.get(0));\n  let imageUrl = parsedData.layers?.cleaning;\n  const videoUrl = parsedData.videos?.cleaning;\n  const downloadUrl = parsedData.mapBundle || videoUrl || imageUrl;\n\n  const { width: mediaWidth, height: mediaHeight } = useMapData(imageUrl, width, height, options);\n\n  const props = { videoUrl, imageUrl, downloadUrl, mediaWidth, mediaHeight }\n  return (\n    <div className={styles.panel}>\n      <div className={styles.wrapper}>\n        {renderSwitch(props)}\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = stylesFactory(() => ({\n  panel: css`\n      display: flex;\n      justify-content: center;\n      align-items: flex-end;\n    `,\n  wrapper: css`\n      padding: 10px;\n      position: relative;\n    `,\n}));\n","import { PanelPlugin } from '@grafana/data';\nimport { SimpleOptions } from './types';\nimport { MapDisplayPanel } from './components/MapDisplayPanel';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(MapDisplayPanel);\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","ImageDisplayPanel","imageUrl","downloadUrl","width","height","styles","getStyles","displayDownload","setDisplayDownload","useState","img","src","onError","Error","onLoad","className","cx","css","target","rel","href","download","downloadButton","onClick","e","link","document","createElement","substr","lastIndexOf","click","DownloadFile","i","stylesFactory","VideoDisplayPanel","videoUrl","video","controls","poster","loop","muted","preload","console","log","isVideoFile","url","test","panel","wrapper","plugin","PanelPlugin","options","data","parsedData","JSON","parse","series","fields","values","layers","cleaning","videos","mapBundle","mediaWidth","mediaHeight","panelWidth","panelHeight","setImgWidth","setImgHeight","useEffect","aspectRatio","Image","onload","adjustedWidth","adjustedHeight","useMapData","props","div","renderSwitch"],"sourceRoot":""}