{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"d3\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../node_modules/d3-path/src/path.js","webpack:///../node_modules/d3-shape/src/array.js","webpack:///../node_modules/d3-shape/src/constant.js","webpack:///../node_modules/d3-shape/src/point.js","webpack:///../node_modules/d3-shape/src/link/index.js","webpack:///../node_modules/d3-sankey/src/sankeyLinkHorizontal.js","webpack:///./components/Link.tsx","webpack:///./components/Node.tsx","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/sum.js","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/max.js","webpack:///../node_modules/d3-sankey/src/align.js","webpack:///../node_modules/d3-sankey/src/constant.js","webpack:///../node_modules/d3-sankey/src/sankey.js","webpack:///./components/Tooltip.tsx","webpack:///./components/Headers.tsx","webpack:///./components/Sankey.tsx","webpack:///../node_modules/d3-sankey/node_modules/d3-array/src/min.js","webpack:///./module.ts","webpack:///./SankeyPanel.tsx","webpack:///./dataParser.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__200__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","// import * as d3 from 'd3';\nimport React from 'react';\nimport * as d3Sankey from 'd3-sankey';\n\ninterface LinkProps {\n  data: any;\n  panelId: any;\n}\n\n/**\n * Create Sankey links\n *\n * @param data is the link data produced by calling the d3-sankey function\n * @return {*}  the sankey link\n */\nexport const Link: React.FC<LinkProps> = ({ data, panelId }) => {\n  const link: any = d3Sankey.sankeyLinkHorizontal();\n  // const strokeColor = '#4ec1e0';\n  const strokeColor = data.color;\n  const id = `${panelId}-${data.id}`;\n  const className = `sankey-path${panelId}`;\n\n  return (\n    <>\n      <path\n        d={link(data)}\n        fill={'none'}\n        stroke={strokeColor}\n        strokeOpacity={0.8}\n        opacity={0.7}\n        strokeWidth={data.width}\n        id={id}\n        display={data.displayValue}\n        className={className}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { useTheme2 } from '@grafana/ui';\n\ninterface NodeProps {\n  data: any;\n  textColor: string;\n  nodeColor: string;\n  panelId: any;\n}\n\n/**\n * Create Sankey rectangular nodes with labels\n *\n * @param data is the node data produced by calling the d3-sankey function\n * @param textColor is set in the editor panel, the color of the node label text\n * @param nodeColor is set in the editor panel, the fill color of the nodes\n * @return {*}  the node and its label\n */\nexport const Node: React.FC<NodeProps> = ({ data, textColor, nodeColor, panelId }) => {\n  const theme = useTheme2();\n\n  let x0 = data.x0;\n  let x1 = data.x1;\n  let y0 = data.y0;\n  let y1 = data.y1;\n  let index = data.index;\n  let name = data.name;\n  let value = data.value;\n\n  const width = x1 - x0;\n  const strokeColor = 'black';\n  const fontSize = theme.typography.fontSize;\n  const className = `sankey-node${panelId}`;\n\n  return (\n    <>\n      <rect\n        x={x0}\n        y={y0}\n        rx={5}\n        ry={5}\n        width={width}\n        height={y1 - y0}\n        stroke={strokeColor}\n        fill={nodeColor}\n        data-index={index}\n        id={panelId + ',' + data.id}\n        d={value}\n        name={name}\n        className={className}\n      />\n      <text\n        x={x0 < width / 2 ? x1 + 6 : x0 - 6}\n        y={(y1 + y0) / 2}\n        style={{\n          fill: textColor,\n          alignmentBaseline: 'middle',\n          fontSize: fontSize,\n          textAnchor: x0 < width / 2 ? 'start' : 'end',\n          pointerEvents: 'none',\n          userSelect: 'none',\n        }}\n      >\n        {name}\n      </text>\n    </>\n  );\n};\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","import React, { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\n\ninterface TooltipProps {\n  rowNames: any;\n  field: any;\n  panelId: any;\n}\n\nexport const Tooltip: React.FC<TooltipProps> = ({ rowNames, field, panelId }) => {\n  // get mouse position for tooltip position\n  const [mousePosition, setMousePosition] = useState({ mouseX: 100, mouseY: 100 });\n\n  const updateMousePosition = (e: any) => {\n    setMousePosition({ mouseX: e.clientX, mouseY: e.clientY });\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousemove', updateMousePosition);\n    const pathClass = `.sankey-path${panelId}`;\n    // Links Tooltip\n    d3.selectAll(pathClass)\n      .on('mouseover', function (event: any, d: any) {\n        let id = d3.select(this).attr('id');\n        let row = id.split('-');\n        let name = rowNames.find((e: any) => e.name === row[1]).display;\n\n        // paths: selected opacity -> 1, all else -> 0.2\n        d3.selectAll(pathClass).each(function (d) {\n          let thisId = d3.select(this).attr('id');\n          let dark = id === thisId;\n          d3.select(this).attr('opacity', dark ? 1 : 0.4);\n        });\n        let thisId = d3.select(this).attr('id');\n        let div = d3\n          .select('body')\n          .append('div')\n          .attr('class', `tooltip-${thisId}`)\n          .html(() => {\n            let textVal = d3.select(this).attr('display');\n            let text = `${name} <br> <b>${textVal}</b>`;\n            return text;\n          })\n          .style('padding', '10px 15px')\n          .style('background', 'black')\n          .style('color', 'white')\n          .style('border', '#A8A8A8 solid 5px')\n          .style('border-radius', '5px')\n          .style('left', mousePosition.mouseX + 'px')\n          .style('top', mousePosition.mouseY + 'px')\n          .style('opacity', 0)\n          .style('position', 'absolute');\n        div.transition().duration(200).style('opacity', 0.8);\n      })\n      .on('mouseout', function (d) {\n        let thisId = d3.select(this).attr('id');\n        d3.selectAll(`.tooltip-${thisId}`).transition().duration(300).remove();\n        d3.selectAll(pathClass).attr('opacity', 0.7);\n      });\n\n    // Nodes Tooltip\n    const nodeClass = `.sankey-node${panelId}`;\n    d3.selectAll(nodeClass)\n      .on('mouseover', function (event: any, d: any) {\n        let id = d3.select(this).attr('id').split(',');\n        let panelId = id[0];\n        let rowList: string[] = [];\n        id.forEach((e) => {\n          rowList.push(`${panelId}-${e}`);\n        });\n        d3.selectAll(pathClass).each(function (d) {\n          let thisId = d3.select(this).attr('id');\n          let found = rowList.find((e) => e === thisId);\n          d3.select(this).attr('opacity', found ? 1 : 0.2);\n        });\n\n        let thisNode = d3.select(this).attr('data-index');\n        let div = d3\n          .select('body')\n          .append('div')\n          .attr('class', `tooltip-node${thisNode}`)\n          .html(() => {\n            let textVal = field.display(d3.select(this).attr('d'));\n            let name = d3.select(this).attr('name');\n            let text;\n            if (textVal.suffix) {\n              text = `${name}: <b>${textVal.text} ${textVal.suffix}</b>`;\n            } else {\n              text = `${name}: <b>${textVal.text}</b>`;\n            }\n            return text;\n          })\n          .style('padding', '10px 15px')\n          .style('background', 'black')\n          .style('color', 'white')\n          .style('border', '#A8A8A8 solid 5px')\n          .style('border-radius', '5px')\n          .style('left', mousePosition.mouseX + 'px')\n          .style('top', mousePosition.mouseY + 'px')\n          .style('opacity', 0)\n          .style('position', 'absolute');\n        div.transition().duration(200).style('opacity', 0.8);\n      })\n      .on('mouseout', function (d) {\n        let thisNode = d3.select(this).attr('data-index');\n        d3.selectAll(`.tooltip-node${thisNode}`).transition().duration(300).remove();\n        d3.selectAll(pathClass).attr('opacity', 0.7);\n      });\n\n    return () => {\n      window.removeEventListener('mousemove', updateMousePosition);\n    };\n  });\n  return null;\n};\n","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\ninterface HeaderProps {\n  displayNames: any;\n  width: any;\n  id: any;\n  topMargin: number;\n  textColor: string;\n}\n\nexport const Headers: React.FC<HeaderProps> = ({ displayNames, width, id, topMargin, textColor }) => {\n  useEffect(() => {\n    //clear old headers\n    d3.select('#' + id)\n      .selectAll('.header-text')\n      .remove();\n\n    const head = d3\n      .select('#' + id)\n      .append('g')\n      .attr('id', `${id} header`);\n    const MARGIN = { top: topMargin, right: 20, bottom: 50, left: 20 };\n\n    const translateY = MARGIN.top / 2;\n\n    // Add left and right axis labels\n    head\n      .append('text')\n      .attr('class', 'header-text')\n      .attr('transform', 'translate(' + MARGIN.left + ',' + translateY + ')') // above left axis\n      .attr('font-size', '14pt')\n      .attr('font-weight', '500')\n      .attr('text-anchor', 'start')\n      .text(displayNames[0])\n      .attr('fill', textColor);\n\n    head\n      .append('text')\n      .attr('class', 'header-text')\n      .attr('transform', 'translate(' + (width + MARGIN.left) + ',' + translateY + ')') // above right axis\n      .attr('font-size', '14pt')\n      .attr('font-weight', '500')\n      .attr('text-anchor', 'end')\n      .text(displayNames[displayNames.length - 2]) // last one is value label\n      .attr('fill', textColor);\n\n    if (displayNames.length > 3) {\n      const colWidth = width / (displayNames.length - 2);\n      for (let i = 1; i < displayNames.length - 2; i++) {\n        let translateX = colWidth * i + MARGIN.left;\n        head\n          .append('text')\n          .attr('class', 'header-text')\n          .attr('transform', `translate(${translateX},${translateY})`)\n          .attr('font-size', '14pt')\n          .attr('font-weight', '500')\n          .attr('text-anchor', 'middle')\n          .text(displayNames[i])\n          .attr('fill', textColor);\n      }\n    }\n  });\n\n  return null;\n};\n","import React from 'react';\nimport { Link } from './Link';\nimport { Node } from './Node';\nimport * as d3Sankey from 'd3-sankey';\nimport { Tooltip } from './Tooltip';\nimport { Headers } from './Headers';\n// import { GrafanaTheme2 } from '@grafana/data';\n// import { useTheme2 } from '@grafana/ui';\n// import { css } from '@emotion/css';\n\n// import '../css/styles.css';\n\ninterface SankeyProps {\n  data: any;\n  width: number;\n  height: number;\n  displayNames: any;\n  rowDisplayNames: any;\n  id: any;\n  textColor: string;\n  nodeColor: string;\n  field: any;\n  nodeWidth: number;\n  nodePadding: number;\n  iteration: number;\n}\n\n/**\n * The sankey graph\n */\nexport const Sankey: React.FC<SankeyProps> = ({\n  data,\n  width,\n  height,\n  displayNames,\n  rowDisplayNames,\n  id,\n  textColor,\n  nodeColor,\n  field,\n  nodeWidth,\n  nodePadding,\n  iteration,\n}) => {\n  // const theme = useTheme2();\n\n  const MARGIN = { top: 75, bottom: 50, right: 20, left: 20 };\n  const graphWidth = width - MARGIN.left - MARGIN.right;\n  const graphHeight = height - MARGIN.top - MARGIN.bottom;\n  const sankey: any = d3Sankey\n    .sankey()\n    .iterations(iteration)\n    .nodeWidth(nodeWidth)\n    .nodePadding(nodePadding)\n    .extent([\n      [0, 0],\n      [graphWidth, graphHeight],\n    ]);\n\n  // Return an SVG group only if data exists\n  if (data) {\n    const { links, nodes } = sankey(data);\n\n    return (\n      <svg id={'Chart_' + id} width={width} height={height}>\n        <Headers\n          displayNames={displayNames}\n          width={graphWidth}\n          id={'Chart_' + id}\n          topMargin={MARGIN.top}\n          textColor={textColor}\n        />\n        <Tooltip rowNames={rowDisplayNames} field={field} panelId={id} />\n        <g transform={`translate(${MARGIN.left}, ${MARGIN.top})`}>\n          {links.map((d: { width: any }, i: any) => (\n            <Link key={i} data={d} panelId={id} />\n          ))}\n        </g>\n        <g transform={`translate(${MARGIN.left}, ${MARGIN.top})`}>\n          {nodes.map((d: { index: any; x0: any; x1: any; y0: any; y1: any; name: any; value: any }, i: any) => (\n            <Node data={d} key={i} textColor={textColor} nodeColor={nodeColor} panelId={id} />\n          ))}\n        </g>\n      </svg>\n    );\n  }\n  return <div id={'Chart_' + id} style={{ height: height, width: width }}></div>;\n};\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import { PanelPlugin, FieldConfigProperty, FieldOverrideContext, getFieldDisplayName } from '@grafana/data';\n// import { standardOptionsCompat } from 'grafana-plugin-support';\nimport { SankeyOptions } from './types';\nimport { SankeyPanel } from './SankeyPanel';\n\n/**\n * Grafana panel plugin main module\n *\n * @param {*} { panel: React.ComponentType<PanelProps<SankeyOptions>> | null }\n * @return {*} { builder: PanelOptionsEditorBuilder<SankeyOptions> }\n */\n\nconst monochromeBool = (monochrome: boolean) => (config: SankeyOptions) => config.monochrome === monochrome;\n\nexport const plugin = new PanelPlugin<SankeyOptions>(SankeyPanel)\n  .setPanelOptions((builder) => {\n    builder\n      .addBooleanSwitch({\n        path: 'monochrome',\n        name: 'Single Link color only',\n        defaultValue: false,\n      })\n      .addColorPicker({\n        path: 'color',\n        name: 'Link Color',\n        showIf: monochromeBool(true),\n        defaultValue: 'blue',\n      })\n      .addColorPicker({\n        path: 'nodeColor',\n        name: 'Node color',\n        defaultValue: 'grey',\n      })\n      .addSliderInput({\n        path: 'nodeWidth',\n        name: 'Node width',\n        defaultValue: 30,\n        settings: {\n          min: 5,\n          max: 100,\n          step: 1,\n        },\n      })\n      .addSliderInput({\n        path: 'nodePadding',\n        name: 'Node padding',\n        defaultValue: 30,\n        settings: {\n          min: 1,\n          max: 100,\n          step: 1,\n        },\n      })\n      .addSelect({\n        path: 'valueField',\n        name: 'Value Field',\n        description: 'Select the field that should be used for the link thickness',\n        settings: {\n          allowCustomValue: false,\n          options: [],\n          getOptions: async (context: FieldOverrideContext) => {\n            const options = [];\n            if (context && context.data) {\n              for (const frame of context.data) {\n                for (const field of frame.fields) {\n                  const name = getFieldDisplayName(field, frame, context.data);\n                  const value = name;\n                  options.push({ value, label: name });\n                }\n              }\n            }\n            return Promise.resolve(options);\n          },\n        },\n        // defaultValue: options[0],\n      }).addSliderInput({\n        path: 'iteration',\n        name: 'Layout iterations',\n        defaultValue: 7,\n        settings: {\n          min: 1,\n          max: 30,\n          step: 1,\n        },\n      });\n  })\n  .useFieldConfig({\n    disableStandardOptions: [FieldConfigProperty.NoValue, FieldConfigProperty.Max, FieldConfigProperty.Min],\n    standardOptions: {\n      [FieldConfigProperty.Color]: {\n        settings: {\n          byValueSupport: true,\n          bySeriesSupport: true,\n          preferThresholdsMode: true,\n        },\n      },\n    },\n  });\n","import React from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { SankeyOptions } from 'types';\nimport { parseData } from 'dataParser';\nimport { Sankey } from './components/Sankey';\nimport { useTheme2 } from '@grafana/ui';\n\ninterface Props extends PanelProps<SankeyOptions> {}\n/**\n * Grafana Sankey diagram panel\n *\n * @param {*} { options, data, width, height, id }\n * @return {*} { Sankey } the Sankey graph\n */\nexport const SankeyPanel: React.FC<Props> = ({ options, data, width, height, id }: any): any => {\n  let graphOptions = {\n    ...options,\n  };\n  const theme = useTheme2();\n  /**\n   * Feed data and options into data parser.\n   * @param {*} { data, options }\n   * @returns [ parsedData, displayNames ]\n   */\n  let parsedData: any[] = [];\n  try {\n    parsedData = parseData(data, options, graphOptions.monochrome, graphOptions.color);\n  } catch (error) {\n    console.error('parsing error: ', error);\n  }\n  const displayNames = parsedData[1];\n  const pluginData = parsedData[0];\n  const rowDisplayNames = parsedData[2];\n  const field = parsedData[3];\n  const fixColor = parsedData[4];\n  // const textColor = fixColor(graphOptions.textColor);\n  const textColor = theme.colors.text.primary;\n  const nodeColor = fixColor(graphOptions.nodeColor);\n\n  return (\n    <g>\n      <Sankey\n        data={pluginData}\n        displayNames={displayNames}\n        rowDisplayNames={rowDisplayNames}\n        width={width}\n        height={height}\n        id={id}\n        textColor={textColor}\n        nodeColor={nodeColor}\n        field={field}\n        nodeWidth={graphOptions.nodeWidth}\n        nodePadding={graphOptions.nodePadding}\n        iteration={graphOptions.iteration}\n      />\n    </g>\n  );\n};\n","import { DataFrameView, Field, getFieldDisplayName, Vector } from '@grafana/data';\n// import { color } from 'd3';\n/**\n * Takes data from Grafana query and returns it in the format needed for this panel\n *\n * @param data the data returned by the query\n * @param options the field options from the editor panel\n * @param monochrome the boolean in the editor panel that sets whether the sankey is single or multi colored\n * @param color the color chosen in the editor panel for the sankey links if monochrome bool is true\n * @return {pluginData} the node and link data for the d3-sankey\n * @return {displayNames} the display names for the headers\n * @return {rowDisplayNames}\n * @return {valueField[0]}\n */\nexport function parseData(data: { series: any[] }, options: { valueField: any }, monochrome: boolean, color: any) {\n  const valueFieldName = options.valueField;\n\n  /**\n   * Colors\n   * if monochrome = true, set all colors to value: color\n   * else, set to multi color\n   */\n\n  function fixColor(color: string) {\n    switch (color) {\n      case 'dark-green':\n        color = '#1A7311';\n        break;\n      case 'semi-dark-green':\n        color = '#36872D';\n        break;\n      case 'light-green':\n        color = '#73BF68';\n        break;\n      case 'super-light-green':\n        color = '#96D88C';\n        break;\n      case 'dark-yellow':\n        color = 'rgb(207, 159, 0)';\n        break;\n      case 'semi-dark-yellow':\n        color = 'rgb(224, 180, 0)';\n        break;\n      case 'light-yellow':\n        color = 'rgb(250, 222, 42)';\n        break;\n      case 'super-light-yellow':\n        color = 'rgb(255, 238, 82)';\n        break;\n      case 'dark-red':\n        color = 'rgb(173, 3, 23)';\n        break;\n      case 'semi-dark-red':\n        color = 'rgb(196, 22, 42)';\n        break;\n      case 'light-red':\n        color = 'rgb(242, 73, 92)';\n        break;\n      case 'super-light-red':\n        color = 'rgb(255, 115, 131)';\n        break;\n      case 'dark-blue':\n        color = 'rgb(18, 80, 176)';\n        break;\n      case 'semi-dark-blue':\n        color = 'rgb(31, 96, 196)';\n        break;\n      case 'light-blue':\n        color = 'rgb(87, 148, 242)';\n        break;\n      case 'super-light-blue':\n        color = 'rgb(138, 184, 255)';\n        break;\n      case 'dark-orange':\n        color = 'rgb(229, 84, 0)';\n        break;\n      case 'semi-dark-orange':\n        color = 'rgb(250, 100, 0)';\n        break;\n      case 'light-orange':\n        color = 'rgb(255, 152, 48)';\n        break;\n      case 'super-light-orange':\n        color = 'rgb(255, 179, 87)';\n        break;\n      case 'dark-purple':\n        color = 'rgb(124, 46, 163)';\n        break;\n      case 'semi-dark-purple':\n        color = 'rgb(143, 59, 184)';\n        break;\n      case 'light-purple':\n        color = 'rgb(184, 119, 217)';\n        break;\n      case 'super-light-purple':\n        color = 'rgb(202, 149, 229)';\n        break;\n      default:\n        break;\n    }\n    return color;\n  }\n\n  const colorArray: string[] = [];\n\n  if (monochrome) {\n    colorArray.push(fixColor(color));\n    // colorArray.push(color);\n  } else {\n    colorArray.push('#018EDB');\n    colorArray.push('#DB8500');\n    colorArray.push('#7C00DB');\n    colorArray.push('#DB0600');\n    colorArray.push('#00DB57');\n  }\n\n  let allData = data.series[0].fields;\n  let numFields = allData.length - 1;\n\n  // add data checker.  are there enough fields?\n\n  // get display names\n  let displayNames: string[] = [];\n  allData.forEach((field: Field<any, Vector<any>>) => {\n    displayNames.push(getFieldDisplayName(field));\n  });\n\n  // Find selected value field or default to the first number field and use for values.\n  const valueField = valueFieldName\n    ? data.series.map((series: { fields: any[] }) =>\n        series.fields.find((field: { name: any }) => field.name === valueFieldName)\n      )\n    : data.series.map((series: { fields: any[] }) =>\n        series.fields.find((field: { type: string }) => field.type === 'number')\n      );\n\n  let values = [];\n  valueField[0].values.map((value: any) => {\n    values.push([value, valueField[0].display(value), valueField[0].name]);\n  });\n  // display converts value to display value with units\n  // name = name of field\n\n  const series = data.series[0];\n  const frame = new DataFrameView(series);\n\n  // initialize arrays\n  let pluginDataLinks: Array<{\n    source: number;\n    target: number;\n    value: number;\n    displayValue: any;\n    id: string;\n    color: any;\n    node0: any;\n  }> = [];\n  let pluginDataNodes: Array<{ name: any; id: any; colId: number }> = [];\n  let col0: Array<{ name: any; index: number; color: any }> = [];\n  let rowDisplayNames: Array<{ name: any; display: any }> = [];\n\n  let rowId = 0; // update after each row\n  let currentColor;\n\n  // Retrieve panel data from panel\n  frame.forEach((row) => {\n    let currentLink: number[] = [];\n    // go through columns to find all nodes\n    for (let i = 0; i < numFields; i++) {\n      let node = row[i];\n      let index = pluginDataNodes.findIndex((e) => e.name === node && e.colId === i);\n      if (index === -1) {\n        index = pluginDataNodes.push({ name: node, id: [`row${rowId}`], colId: i }) - 1;\n        if (i === 0) {\n          currentColor = colorArray[col0.length % colorArray.length];\n          col0.push({ name: node, index: index, color: currentColor });\n        }\n      } else {\n        pluginDataNodes[index].id.push(`row${rowId}`); // might not need?\n      }\n      currentLink.push(index);\n    }\n    // create all the individual links, value is always the last column\n    // let rowColor = colorArray[currentLink[0] % colorArray.length];\n    let rowColor = col0.find((e) => e.index === currentLink[0])?.color;\n    let rowDisplay = `${pluginDataNodes[currentLink[0]].name}`;\n    for (let i = 0; i < currentLink.length - 1; i++) {\n      let fieldValues = valueField[0].display(row[numFields]);\n      let displayValue;\n      if (fieldValues.suffix) {\n        displayValue = `${fieldValues.text} ${fieldValues.suffix}`;\n      } else {\n        displayValue = `${fieldValues.text}`;\n      }\n\n      pluginDataLinks.push({\n        source: currentLink[i],\n        target: currentLink[i + 1],\n        value: row[numFields],\n        displayValue: displayValue,\n        id: `row${rowId}`,\n        color: rowColor,\n        node0: currentLink[0],\n      });\n      rowDisplay = rowDisplay.concat(` -> ${pluginDataNodes[currentLink[i + 1]].name}`);\n    }\n    rowDisplayNames.push({ name: `row${rowId}`, display: rowDisplay });\n    rowId++;\n  });\n  const pluginData = { links: pluginDataLinks, nodes: pluginDataNodes };\n\n  return [pluginData, displayNames, rowDisplayNames, valueField[0], fixColor];\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__200__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","pi","Math","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","_","path","constructor","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","x0","y0","x21","y21","x01","y01","l01_2","Error","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","slice","Array","p","linkSource","source","linkTarget","target","curveHorizontal","context","horizontalSource","horizontalTarget","curve","link","buffer","argv","arguments","s","apply","t","length","constant","Link","data","panelId","d3Sankey","strokeColor","color","id","className","fill","stroke","strokeOpacity","opacity","strokeWidth","width","display","displayValue","Node","textColor","nodeColor","theme","useTheme2","index","name","fontSize","typography","rx","ry","height","data-index","text","style","alignmentBaseline","textAnchor","pointerEvents","userSelect","sum","values","valueof","max","justify","node","sourceLinks","depth","ascendingSourceBreadth","b","ascendingBreadth","ascendingTargetBreadth","defaultId","defaultNodes","graph","nodes","defaultLinks","links","find","nodeById","computeLinkBreadths","targetLinks","Tooltip","rowNames","field","mousePosition","setMousePosition","useState","mouseX","mouseY","updateMousePosition","e","clientX","clientY","useEffect","window","addEventListener","pathClass","d3","on","event","attr","row","split","each","thisId","dark","append","html","textVal","transition","duration","remove","nodeClass","rowList","forEach","push","found","thisNode","suffix","removeEventListener","Headers","displayNames","topMargin","selectAll","head","translateY","colWidth","i","translateX","Sankey","rowDisplayNames","nodeWidth","nodePadding","iteration","graphWidth","graphHeight","sankey","py","sort","linkSort","align","iterations","entries","Map","map","computeNodeLinks","fixedValue","computeNodeValues","current","Set","next","size","add","computeNodeDepths","computeNodeHeights","columns","kx","min","floor","layer","column","computeNodeLayers","c","ky","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","computeNodeBreadths","v","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","update","nodeId","nodeAlign","nodeSort","extent","svg","g","transform","div","plugin","PanelPlugin","options","graphOptions","parsedData","monochrome","valueFieldName","valueField","fixColor","colorArray","allData","series","fields","numFields","getFieldDisplayName","type","frame","DataFrameView","currentColor","pluginDataLinks","pluginDataNodes","col0","rowId","currentLink","findIndex","colId","rowColor","rowDisplay","fieldValues","node0","concat","parseData","error","console","pluginData","colors","primary","setPanelOptions","builder","addBooleanSwitch","defaultValue","addColorPicker","showIf","config","addSliderInput","settings","step","addSelect","description","allowCustomValue","getOptions","label","Promise","resolve","useFieldConfig","disableStandardOptions","FieldConfigProperty","NoValue","Max","Min","standardOptions","Color","byValueSupport","bySeriesSupport","preferThresholdsMode"],"sourceRoot":""}